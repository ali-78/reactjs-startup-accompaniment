{"ast":null,"code":"var _jsxFileName = \"/home/ali/hamnavazi/my-app/src/components/AuthContext/AuthContext.tsx\";\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport { tokenReducer } from \"../../reducers/token\";\nexport const TokenContext = createContext({\n  token: {\n    accessToken: \"\",\n    refreshToken: \"\"\n  },\n  dispatch: null\n});\n\nconst TokenContextProvider = props => {\n  const [token, dispatch] = useReducer(tokenReducer, {}, () => {\n    const localData = localStorage.getItem(\"token\");\n    return localData ? JSON.parse(localData) : null;\n  });\n  useEffect(() => {\n    localStorage.setItem(\"token\", JSON.stringify(token));\n  }, [token]);\n  const value = {\n    token,\n    dispatch\n  };\n  return /*#__PURE__*/React.createElement(TokenContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport { TokenContextProvider };","map":{"version":3,"sources":["/home/ali/hamnavazi/my-app/src/components/AuthContext/AuthContext.tsx"],"names":["React","createContext","useReducer","useEffect","tokenReducer","TokenContext","token","accessToken","refreshToken","dispatch","TokenContextProvider","props","localData","localStorage","getItem","JSON","parse","setItem","stringify","value","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AAYA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,CAAC;AACxCK,EAAAA,KAAK,EAAE;AAACC,IAAAA,WAAW,EAAC,EAAb;AAAgBC,IAAAA,YAAY,EAAC;AAA7B,GADiC;AAExCC,EAAAA,QAAQ,EAAE;AAF8B,CAAD,CAAlC;;AAKP,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACL,KAAD,EAAQG,QAAR,IAAoBP,UAAU,CAACE,YAAD,EAAe,EAAf,EAAmB,MAAM;AAC3D,UAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,WAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,IAA3C;AACD,GAHmC,CAApC;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,SAAL,CAAeZ,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,QAAMa,KAAK,GAAG;AAAEb,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAd;AACA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEU,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACS,QADT,CADF;AAKD,CAhBD;;AAkBA,SAASV,oBAAT","sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\"\n\nimport { tokenReducer } from \"../../reducers/token\"\n\ntype TokenType = {\n  accessToken: string\n  refreshToken: string\n}\n\ntype DefaultValue = {\n  token: TokenType\n  dispatch: any\n}\n\nexport const TokenContext = createContext({\n  token: {accessToken:\"\",refreshToken:\"\"},\n  dispatch: null,\n} as DefaultValue)\n\nconst TokenContextProvider = (props) => {\n  const [token, dispatch] = useReducer(tokenReducer, {}, () => {\n    const localData = localStorage.getItem(\"token\")\n    return localData ? JSON.parse(localData) : null\n  })\n\n  useEffect(() => {\n    localStorage.setItem(\"token\", JSON.stringify(token))\n  }, [token])\n\n  const value = { token, dispatch }\n  return (\n    <TokenContext.Provider value={value}>\n      {props.children}\n    </TokenContext.Provider>\n  )\n}\n\nexport { TokenContextProvider }\n"]},"metadata":{},"sourceType":"module"}