{"ast":null,"code":"import React,{Fragment}from\"react\";import{useHistory,useLocation}from\"react-router\";import{SelectOption}from\"../../../common/Form/SelectOption\";import IsLoading from\"../../../common/IsLoading/IsLoading\";var StylesInput=function StylesInput(){var pathName=useLocation().pathname;var history=useHistory();var handleChange=function handleChange(e){var id=e.target.id;var params=new URLSearchParams(window.location.search);params.set(\"styleId\",id);history.replace(\"\".concat(pathName,\"?\").concat(params.toString()));};// const { data: AllStyles, isLoading } = useStyles()\n//fake\nvar isLoading=false;var AllStyles=[{id:1,title:\"sonati\"}];return/*#__PURE__*/React.createElement(Fragment,null,isLoading&&/*#__PURE__*/React.createElement(IsLoading,null),/*#__PURE__*/React.createElement(SelectOption,{listData:isLoading?[]:AllStyles,handleChange:handleChange,name:\"styleId\",placeholder:\"\\u0633\\u0628\\u06A9 | Style\",searchStyle:\"searchSelectOption\"}));};export{StylesInput};","map":{"version":3,"sources":["/home/ali/reactjs-startup-accompaniment/src/components/Search/SearchForm/StylesInput/StylesInput.component.tsx"],"names":["React","Fragment","useHistory","useLocation","SelectOption","IsLoading","StylesInput","pathName","pathname","history","handleChange","e","id","target","params","URLSearchParams","window","location","search","set","replace","toString","isLoading","AllStyles","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,cAAxC,CAGA,OAASC,YAAT,KAA6B,mCAA7B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,qCAAtB,CAEA,GAAMC,CAAAA,WAAqB,CAAG,QAAxBA,CAAAA,WAAwB,EAAM,CAClC,GAAMC,CAAAA,QAAgB,CAAGJ,WAAW,GAAGK,QAAvC,CACA,GAAMC,CAAAA,OAAY,CAAGP,UAAU,EAA/B,CAEA,GAAMQ,CAAAA,YAA8B,CAAG,QAAjCA,CAAAA,YAAiC,CAACC,CAAD,CAAO,CAC5C,GAAMC,CAAAA,EAAU,CAAGD,CAAC,CAACE,MAAF,CAASD,EAA5B,CAEA,GAAME,CAAAA,MAAW,CAAG,GAAIC,CAAAA,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAApB,CACAJ,MAAM,CAACK,GAAP,CAAW,SAAX,CAAsBP,EAAtB,EACAH,OAAO,CAACW,OAAR,WAAmBb,QAAnB,aAA+BO,MAAM,CAACO,QAAP,EAA/B,GACD,CAND,CAQA;AACA;AACA,GAAMC,CAAAA,SAAS,CAAG,KAAlB,CACA,GAAMC,CAAAA,SAAS,CAAG,CAChB,CACEX,EAAE,CAAE,CADN,CAEEY,KAAK,CAAE,QAFT,CADgB,CAAlB,CAOA,mBACE,oBAAC,QAAD,MACGF,SAAS,eAAI,oBAAC,SAAD,MADhB,cAEE,oBAAC,YAAD,EACE,QAAQ,CAAEA,SAAS,CAAG,EAAH,CAAQC,SAD7B,CAEE,YAAY,CAAEb,YAFhB,CAGE,IAAI,CAAC,SAHP,CAIE,WAAW,CAAC,4BAJd,CAKE,WAAW,CAAC,oBALd,EAFF,CADF,CAYD,CAlCD,CAoCA,OAASJ,WAAT","sourcesContent":["import React, { Fragment } from \"react\"\nimport { useHistory, useLocation } from \"react-router\"\n\nimport { useStyles } from \"../../../../core/api/styles.api\"\nimport { SelectOption } from \"../../../common/Form/SelectOption\"\n\nimport IsLoading from \"../../../common/IsLoading/IsLoading\"\n\nconst StylesInput: React.FC = () => {\n  const pathName: string = useLocation().pathname\n  const history: any = useHistory()\n\n  const handleChange: (e: any) => void = (e) => {\n    const id: number = e.target.id\n\n    const params: any = new URLSearchParams(window.location.search)\n    params.set(\"styleId\", id)\n    history.replace(`${pathName}?${params.toString()}`)\n  }\n\n  // const { data: AllStyles, isLoading } = useStyles()\n  //fake\n  const isLoading = false\n  const AllStyles = [\n    {\n      id: 1,\n      title: \"sonati\",\n    },\n  ]\n\n  return (\n    <Fragment>\n      {isLoading && <IsLoading />}\n      <SelectOption\n        listData={isLoading ? [] : AllStyles}\n        handleChange={handleChange}\n        name=\"styleId\"\n        placeholder=\"سبک | Style\"\n        searchStyle=\"searchSelectOption\"\n      />\n    </Fragment>\n  )\n}\n\nexport { StylesInput }\n"]},"metadata":{},"sourceType":"module"}