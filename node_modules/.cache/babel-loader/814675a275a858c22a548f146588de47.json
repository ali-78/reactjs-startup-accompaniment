{"ast":null,"code":"import _slicedToArray from\"/home/ali/reactjs-startup-accompaniment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Grid from\"@material-ui/core/Grid\";import FormInputFieldBlock from\"../FormInputFieldBlock/FormInputFieldBlock\";import{useTheme}from\"@material-ui/core/styles\";import useMediaQuery from\"@material-ui/core/useMediaQuery\";import questionMark from\"../../../../assets/images/registeration/question-mark-icon.png\";import DialogContainer from\"../Dialog\";import IsLoading from\"../../IsLoading\";import CountiesInput from\"./CoutiesInput\";import CitiesInput from\"./CitiesInput\";import{useAllCountries}from\"../../../../core/api/get-all-country.api\";import{useStyles}from\"./LocationInputs.styles\";var LocationInputs=function LocationInputs(props){var classes=useStyles({});var theme=useTheme();var matchesXs=useMediaQuery(theme.breakpoints.down(\"xs\"));var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openDialog=_useState2[0],setOpenDialog=_useState2[1];var lacationHelp={faTitle:\"موقعیت مکانی\",faBody:\"از مهم‌ترین کارکردهای وبسایت همنوازی امکان جستجوی هنرمندان/هنرجویان بر اساس موقعیت جغرافیایی آنهاست. تعیین حدودی محل زندگی/کار شما امکان می‌دهد محققین/گردشگران/ هنرمندان همسایه هرچه سریع‌تر به شما دسترسی یابند.\",enTitle:\"Location\",enBody:\"One of the most important functions of Hamnavazi website is the ability to search for artists/art enthusiasts based on their geographical location. Defining your working/living approximate location allows researchers/tourists/your neighbor artists to find you as quickly as possible.\"};var _useAllCountries=useAllCountries(),isLoading=_useAllCountries.isLoading,data=_useAllCountries.data,isError=_useAllCountries.isError;if(isLoading){return/*#__PURE__*/React.createElement(IsLoading,null);}if(isError){console.log(\"error\");}return/*#__PURE__*/React.createElement(Grid,{item:true,container:true,direction:\"column\"},/*#__PURE__*/React.createElement(Grid,{item:true,container:true,direction:\"row\",spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(\"label\",{className:classes.formInputTitle,htmlFor:\"firstName\"},\"\\u0645\\u0648\\u0642\\u0639\\u06CC\\u062A \\u0645\\u06A9\\u0627\\u0646\\u06CC\")),/*#__PURE__*/React.createElement(Grid,{item:true,className:classes.questionMark,onClick:function onClick(){return setOpenDialog(!openDialog);}},/*#__PURE__*/React.createElement(\"img\",{style:{width:\"100%\",height:\"100%\"},src:questionMark,alt:\"question mark\"}))),/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(DialogContainer,{open:openDialog,setOpen:setOpenDialog,content:lacationHelp})),/*#__PURE__*/React.createElement(Grid,{item:true,container:true,direction:matchesXs?\"column\":\"row\",spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,sm:true},/*#__PURE__*/React.createElement(FormInputFieldBlock,{fieldType:\"selectInput\",name:\"locationId\",errors:props.errors.locationId,touched:props.touched.locationId,placeholder:\"کشور | Country\",hasSearch:true,optionList:data?[data]:[[]],setValue:props.setValue})),/*#__PURE__*/React.createElement(CountiesInput,{errors:props.errors.locationId2,touched:props.touched.locationId2,id:props.values.locationId,setValue:props.setValue}),/*#__PURE__*/React.createElement(CitiesInput,{errors:props.errors.locationId3,touched:props.touched.locationId3,id:props.values.locationId2,setValue:props.setValue})),/*#__PURE__*/React.createElement(Grid,{item:true,style:{marginTop:\"1em\"}},/*#__PURE__*/React.createElement(FormInputFieldBlock,{fieldType:\"textInput\",name:\"locationTitle\",errors:props.errors.locationTitle,touched:props.touched.locationTitle,placeholder:\"منطقه  |  Region\",height:\"type1\"})),/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.formInputSeperator})));};export default LocationInputs;","map":{"version":3,"sources":["/home/ali/reactjs-startup-accompaniment/src/components/common/Form/LocationInputs/LocationInputs.tsx"],"names":["React","useState","Grid","FormInputFieldBlock","useTheme","useMediaQuery","questionMark","DialogContainer","IsLoading","CountiesInput","CitiesInput","useAllCountries","useStyles","LocationInputs","props","classes","theme","matchesXs","breakpoints","down","openDialog","setOpenDialog","lacationHelp","faTitle","faBody","enTitle","enBody","isLoading","data","isError","console","log","formInputTitle","width","height","errors","locationId","touched","setValue","locationId2","values","locationId3","marginTop","locationTitle","formInputSeperator"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport FormInputFieldBlock from \"../FormInputFieldBlock/FormInputFieldBlock\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\n\nimport questionMark from \"../../../../assets/images/registeration/question-mark-icon.png\"\nimport DialogContainer from \"../Dialog\"\nimport IsLoading from \"../../IsLoading\"\n\nimport CountiesInput from \"./CoutiesInput\"\nimport CitiesInput from \"./CitiesInput\"\n\nimport { useAllCountries } from \"../../../../core/api/get-all-country.api\"\n\nimport { StyleProps } from \"./LocationInputs.styles\"\nimport { useStyles } from \"./LocationInputs.styles\"\n\ntype PropsClasses = Record<keyof StyleProps, string>\ntype ErrorsType = {\n  locationId: any\n  locationId2: any\n  locationId3: any\n  locationTitle: any\n}\ntype TouchedType = {\n  locationId: any\n  locationId2: any\n  locationId3: any\n  locationTitle: any\n}\n\ntype properties = {\n  errors: ErrorsType\n  touched: TouchedType\n  setValue: any\n  values: any\n}\n\nconst LocationInputs: React.FC<properties> = (props) => {\n  const classes: PropsClasses = useStyles({} as StyleProps)\n  const theme = useTheme()\n  const matchesXs = useMediaQuery(theme.breakpoints.down(\"xs\"))\n\n  const [openDialog, setOpenDialog] = useState<boolean>(false)\n\n  const lacationHelp = {\n    faTitle: \"موقعیت مکانی\",\n    faBody:\n      \"از مهم‌ترین کارکردهای وبسایت همنوازی امکان جستجوی هنرمندان/هنرجویان بر اساس موقعیت جغرافیایی آنهاست. تعیین حدودی محل زندگی/کار شما امکان می‌دهد محققین/گردشگران/ هنرمندان همسایه هرچه سریع‌تر به شما دسترسی یابند.\",\n    enTitle: \"Location\",\n    enBody:\n      \"One of the most important functions of Hamnavazi website is the ability to search for artists/art enthusiasts based on their geographical location. Defining your working/living approximate location allows researchers/tourists/your neighbor artists to find you as quickly as possible.\",\n  }\n\n  const { isLoading, data, isError } = useAllCountries()\n\n  if (isLoading) {\n    return <IsLoading />\n  }\n\n  if (isError) {\n    console.log(\"error\")\n  }\n\n  return (\n    <Grid item container direction=\"column\">\n      <Grid item container direction=\"row\" spacing={1}>\n        <Grid item>\n          <label className={classes.formInputTitle} htmlFor={\"firstName\"}>\n            موقعیت مکانی\n          </label>\n        </Grid>\n\n        <Grid\n          item\n          className={classes.questionMark}\n          onClick={() => setOpenDialog(!openDialog)}\n        >\n          <img\n            style={{ width: \"100%\", height: \"100%\" }}\n            src={questionMark}\n            alt=\"question mark\"\n          />\n        </Grid>\n      </Grid>\n\n      <Grid item>\n        <DialogContainer\n          open={openDialog}\n          setOpen={setOpenDialog}\n          content={lacationHelp}\n        />\n      </Grid>\n\n      <Grid item container direction={matchesXs ? \"column\" : \"row\"} spacing={2}>\n        <Grid item sm>\n          <FormInputFieldBlock\n            fieldType={\"selectInput\"}\n            name={\"locationId\"}\n            errors={props.errors.locationId}\n            touched={props.touched.locationId}\n            placeholder={\"کشور | Country\"}\n            hasSearch={true}\n            optionList={data ? [data] : [[]]}\n            setValue={props.setValue}\n          />\n        </Grid>\n\n        <CountiesInput\n          errors={props.errors.locationId2}\n          touched={props.touched.locationId2}\n          id={props.values.locationId}\n          setValue={props.setValue}\n        />\n        <CitiesInput\n          errors={props.errors.locationId3}\n          touched={props.touched.locationId3}\n          id={props.values.locationId2}\n          setValue={props.setValue}\n        />\n      </Grid>\n      <Grid item style={{ marginTop: \"1em\" }}>\n        <FormInputFieldBlock\n          fieldType={\"textInput\"}\n          name={\"locationTitle\"}\n          errors={props.errors.locationTitle}\n          touched={props.touched.locationTitle}\n          placeholder={\"منطقه  |  Region\"}\n          height={\"type1\"}\n        />\n      </Grid>\n      <Grid item>\n        <div className={classes.formInputSeperator} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default LocationInputs\n"]},"metadata":{},"sourceType":"module"}