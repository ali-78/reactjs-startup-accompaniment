{"ast":null,"code":"var _jsxFileName = \"/home/ali/hamnavazi/my-app/src/components/Registration/FastSubscription/FastSubscriptionBlock.tsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport FormTitle from \"../../common/Form/FormTitle\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport FastSubscriptionFormFields from \"./FastSubscriptionFormFields\";\nimport { initialValues } from \"../../../core/initialvalues/register-fast-subscription.initialvalues\";\nimport { validation } from \"../../../core/validations/register-fast-subscription.validation\";\nimport CustomButton, { ClassName } from \"../../common/Form/Button\";\nimport Loading from \"../../../components/common/IsLoading\";\nimport { usePostRegister } from \"../../../core/api/post-register\";\nimport { useStyles } from \"./FastSubscriptionBlock.styles\";\n\nconst FastSubscriptionBlock = () => {\n  const classes = useStyles({});\n  const theme = useTheme();\n  const matchesXs = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const [mutate, {\n    error,\n    isError,\n    isLoading\n  }] = usePostRegister();\n\n  if (isError) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    clone: true,\n    boxShadow: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.fastSubsBlockContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    className: classes.fastSubsFormContainer,\n    style: {\n      width: matchesXs ? \"95%\" : \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    title: \"\\u0647\\u0648\\u06CC\\u062A | ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: Yup.object().shape(validation),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      mutate(values).then(() => {\n        console.log(\"loged in\");\n      }).catch(() => {\n        console.log(error);\n      });\n      setTimeout(() => {\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, ({\n    errors,\n    touched,\n    isSubmitting,\n    setFieldValue,\n    values\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastSubscriptionFormFields, {\n      errors: errors,\n      touched: touched,\n      setFieldValue: setFieldValue,\n      values: values,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      justify: \"center\",\n      style: {\n        textAlign: \"center\",\n        marginTop: \"5em\",\n        marginBottom: \"3em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      for: ClassName.registerForm,\n      disabled: isSubmitting,\n      type: \"submit\",\n      value: \"عضویت سریع | Fast Subscription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    })));\n  })))));\n};\n\nexport default FastSubscriptionBlock;","map":{"version":3,"sources":["/home/ali/hamnavazi/my-app/src/components/Registration/FastSubscription/FastSubscriptionBlock.tsx"],"names":["React","Grid","Box","FormTitle","Formik","Form","Yup","useTheme","useMediaQuery","FastSubscriptionFormFields","initialValues","validation","CustomButton","ClassName","Loading","usePostRegister","useStyles","FastSubscriptionBlock","classes","theme","matchesXs","breakpoints","down","mutate","error","isError","isLoading","console","log","fastSubsBlockContainer","fastSubsFormContainer","width","object","shape","values","setSubmitting","then","catch","setTimeout","errors","touched","isSubmitting","setFieldValue","textAlign","marginTop","marginBottom","registerForm"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Box from \"@material-ui/core/Box\"\nimport FormTitle from \"../../common/Form/FormTitle\"\nimport { Formik, Form } from \"formik\"\nimport * as Yup from \"yup\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\n\nimport FastSubscriptionFormFields from \"./FastSubscriptionFormFields\"\n\nimport { initialValues } from \"../../../core/initialvalues/register-fast-subscription.initialvalues\"\nimport { validation } from \"../../../core/validations/register-fast-subscription.validation\"\n\nimport CustomButton, { ClassName } from \"../../common/Form/Button\"\n\nimport Loading from \"../../../components/common/IsLoading\"\n\nimport { usePostRegister } from \"../../../core/api/post-register\"\n\nimport { StyleProps } from \"./FastSubscriptionBlock.styles\"\nimport { useStyles } from \"./FastSubscriptionBlock.styles\"\n\ntype PropsClasses = Record<keyof StyleProps, string>\n\nconst FastSubscriptionBlock: React.FC = () => {\n  const classes: PropsClasses = useStyles({} as StyleProps)\n  const theme = useTheme()\n  const matchesXs = useMediaQuery(theme.breakpoints.down(\"xs\"))\n\n  const [mutate, { error, isError, isLoading }] = usePostRegister()\n\n  if (isError) {\n    console.log(error)\n  }\n\n  return (\n    <React.Fragment>\n      {isLoading && <Loading />}\n      <Box clone boxShadow={3}>\n        <Grid className={classes.fastSubsBlockContainer}>\n          <Grid\n            item\n            container\n            direction=\"row\"\n            className={classes.fastSubsFormContainer}\n            style={{ width: matchesXs ? \"95%\" : \"600px\" }}\n          >\n            <Grid item container direction=\"column\">\n              <FormTitle title=\"هویت | ID\" />\n            </Grid>\n\n            <Formik\n              initialValues={initialValues}\n              validationSchema={Yup.object().shape(validation)}\n              onSubmit={(values, { setSubmitting }) => {\n                mutate(values)\n                  .then(() => {\n                    console.log(\"loged in\")\n                  })\n                  .catch(() => {\n                    console.log(error)\n                  })\n                setTimeout(() => {\n                  setSubmitting(false)\n                }, 400)\n              }}\n            >\n              {({ errors, touched, isSubmitting, setFieldValue, values }) => {\n                return (\n                  <Form style={{ width: \"100%\" }}>\n                    <FastSubscriptionFormFields\n                      errors={errors}\n                      touched={touched}\n                      setFieldValue={setFieldValue}\n                      values={values}\n                    />\n                    <Grid\n                      item\n                      container\n                      justify=\"center\"\n                      style={{\n                        textAlign: \"center\",\n                        marginTop: \"5em\",\n                        marginBottom: \"3em\",\n                      }}\n                    >\n                      <CustomButton\n                        for={ClassName.registerForm}\n                        disabled={isSubmitting}\n                        type={\"submit\"}\n                        value={\"عضویت سریع | Fast Subscription\"}\n                      />\n                    </Grid>\n                  </Form>\n                )\n              }}\n            </Formik>\n          </Grid>\n        </Grid>\n      </Box>\n    </React.Fragment>\n  )\n}\n\nexport default FastSubscriptionBlock\n"]},"metadata":{},"sourceType":"module"}