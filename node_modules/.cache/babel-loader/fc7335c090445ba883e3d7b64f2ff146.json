{"ast":null,"code":"var _jsxFileName = \"/home/ali/reactjs-startup-accompaniment/src/components/Search/SearchContainer.tsx\";\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport queryString from \"query-string\";\nimport { SearchFilter } from \"./SearchFilter\";\nimport { SearchTable } from \"./SearchTable\";\nimport * as SearchModel from \"../../core/initialvalues/search-initialvalues\";\nimport style from \"./SearchContainer.module.css\";\n\nconst SearchContainer = () => {\n  const history = useHistory();\n  const searchParams = useLocation().search;\n  const searchPathname = useLocation().pathname;\n  const [filterToggle, setFilterToggle] = useState(false);\n  const [searchState, setSearchState] = useReducer((s, a) => ({ ...s,\n    ...a\n  }), SearchModel.SearchInittial);\n\n  const FindQueries = (keys, params) => {\n    keys.map(key => {\n      SearchModel.NumbericParams.includes(key) && setSearchState({\n        [key]: Number(params[key])\n      });\n      SearchModel.BooleanParams.includes(key) && setSearchState({\n        [key]: true\n      });\n      SearchModel.ArrayParams.includes(key) && setSearchState({\n        [key]: JSON.parse(params[key])\n      });\n    });\n  };\n\n  useEffect(() => {\n    searchPathname !== `${searchPathname}` && history.push(`${searchPathname}?page=${1}`);\n  }, []);\n  useEffect(() => {\n    setSearchState(SearchModel.SearchInittial);\n    const params = queryString.parseUrl(searchParams).query;\n    const keys = Object.keys(params);\n    FindQueries(keys, params);\n  }, [searchParams]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: style.searchContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchFilter, {\n    filterToggle: filterToggle,\n    setFilterToggle: setFilterToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchTable, {\n    searchState: searchState,\n    filterToggle: filterToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { SearchContainer }; // import { useSearchResult } from \"../../../core/api/search.api\"\n// import { ISearchInittial } from \"../../../core/models/search.model\"\n// import Cookie from \"js-cookie\"\n// import swal from \"sweetalert\"\n// const { resolvedData, isLoading } = useSearchResult(\n//   searchState\n// )","map":{"version":3,"sources":["/home/ali/reactjs-startup-accompaniment/src/components/Search/SearchContainer.tsx"],"names":["React","useEffect","useReducer","useState","useHistory","useLocation","queryString","SearchFilter","SearchTable","SearchModel","style","SearchContainer","history","searchParams","search","searchPathname","pathname","filterToggle","setFilterToggle","searchState","setSearchState","s","a","SearchInittial","FindQueries","keys","params","map","key","NumbericParams","includes","Number","BooleanParams","ArrayParams","JSON","parse","push","parseUrl","query","Object","searchContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,KAAKC,WAAZ,MAA6B,+CAA7B;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,eAAyB,GAAG,MAAM;AACtC,QAAMC,OAAY,GAAGR,UAAU,EAA/B;AACA,QAAMS,YAAoB,GAAGR,WAAW,GAAGS,MAA3C;AACA,QAAMC,cAAsB,GAAGV,WAAW,GAAGW,QAA7C;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAU,KAAV,CAAhD;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgClB,UAAU,CAC9C,CAACmB,CAAD,EAAIC,CAAJ,MAAW,EAAE,GAAGD,CAAL;AAAQ,OAAGC;AAAX,GAAX,CAD8C,EAE9Cb,WAAW,CAACc,cAFkC,CAAhD;;AAKA,QAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACpCD,IAAAA,IAAI,CAACE,GAAL,CAAUC,GAAD,IAAiB;AACxBnB,MAAAA,WAAW,CAACoB,cAAZ,CAA2BC,QAA3B,CAAoCF,GAApC,KACER,cAAc,CAAC;AAAE,SAACQ,GAAD,GAAOG,MAAM,CAACL,MAAM,CAACE,GAAD,CAAP;AAAf,OAAD,CADhB;AAGAnB,MAAAA,WAAW,CAACuB,aAAZ,CAA0BF,QAA1B,CAAmCF,GAAnC,KAA2CR,cAAc,CAAC;AAAE,SAACQ,GAAD,GAAO;AAAT,OAAD,CAAzD;AAEAnB,MAAAA,WAAW,CAACwB,WAAZ,CAAwBH,QAAxB,CAAiCF,GAAjC,KACER,cAAc,CAAC;AAAE,SAACQ,GAAD,GAAOM,IAAI,CAACC,KAAL,CAAWT,MAAM,CAACE,GAAD,CAAjB;AAAT,OAAD,CADhB;AAED,KARD;AASD,GAVD;;AAYA3B,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,cAAc,KAAM,GAAEA,cAAe,EAArC,IACEH,OAAO,CAACwB,IAAR,CAAc,GAAErB,cAAe,SAAQ,CAAE,EAAzC,CADF;AAED,GAHQ,EAGN,EAHM,CAAT;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,cAAc,CAACX,WAAW,CAACc,cAAb,CAAd;AACA,UAAMG,MAAM,GAAGpB,WAAW,CAAC+B,QAAZ,CAAqBxB,YAArB,EAAmCyB,KAAlD;AACA,UAAMb,IAAc,GAAGc,MAAM,CAACd,IAAP,CAAYC,MAAZ,CAAvB;AACAF,IAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,CAAX;AACD,GALQ,EAKN,CAACb,YAAD,CALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEH,KAAK,CAAC8B,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,YAAY,EAAEvB,YADhB;AAEE,IAAA,eAAe,EAAEC,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAEC,WAA1B;AAAuC,IAAA,YAAY,EAAEF,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CA5CD;;AA8CA,SAASN,eAAT,G,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\"\nimport { useHistory, useLocation } from \"react-router\"\nimport queryString from \"query-string\"\n\nimport { SearchFilter } from \"./SearchFilter\"\nimport { SearchTable } from \"./SearchTable\"\nimport * as SearchModel from \"../../core/initialvalues/search-initialvalues\"\n\nimport style from \"./SearchContainer.module.css\"\n\nconst SearchContainer: React.FC = () => {\n  const history: any = useHistory()\n  const searchParams: string = useLocation().search\n  const searchPathname: string = useLocation().pathname\n\n  const [filterToggle, setFilterToggle] = useState<boolean>(false)\n  const [searchState, setSearchState] = useReducer(\n    (s, a) => ({ ...s, ...a }),\n    SearchModel.SearchInittial\n  )\n\n  const FindQueries = (keys, params) => {\n    keys.map((key: string) => {\n      SearchModel.NumbericParams.includes(key) &&\n        setSearchState({ [key]: Number(params[key]) })\n\n      SearchModel.BooleanParams.includes(key) && setSearchState({ [key]: true })\n\n      SearchModel.ArrayParams.includes(key) &&\n        setSearchState({ [key]: JSON.parse(params[key]) })\n    })\n  }\n\n  useEffect(() => {\n    searchPathname !== `${searchPathname}` &&\n      history.push(`${searchPathname}?page=${1}`)\n  }, [])\n\n  useEffect(() => {\n    setSearchState(SearchModel.SearchInittial)\n    const params = queryString.parseUrl(searchParams).query\n    const keys: string[] = Object.keys(params)\n    FindQueries(keys, params)\n  }, [searchParams])\n\n  return (\n    <div className={style.searchContainer}>\n      <SearchFilter\n        filterToggle={filterToggle}\n        setFilterToggle={setFilterToggle}\n      />\n      <SearchTable searchState={searchState} filterToggle={filterToggle} />\n    </div>\n  )\n}\n\nexport { SearchContainer }\n\n// import { useSearchResult } from \"../../../core/api/search.api\"\n// import { ISearchInittial } from \"../../../core/models/search.model\"\n// import Cookie from \"js-cookie\"\n// import swal from \"sweetalert\"\n\n// const { resolvedData, isLoading } = useSearchResult(\n//   searchState\n// )\n"]},"metadata":{},"sourceType":"module"}