{"ast":null,"code":"var _jsxFileName = \"/home/ali/reactjs-startup-accompaniment/src/components/common/Form/FormTextInput/FormTextInput.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport Styles from \"./FormTextInput.module.css\";\n\nconst FromTextInput = props => {\n  const [height, setHeight] = useState(\"35px\");\n  useEffect(() => {\n    switch (props.height) {\n      case \"type1\":\n        setHeight(\"40px\");\n        break;\n\n      case \"type2\":\n        setHeight(\"90px\");\n        break;\n\n      case \"type3\":\n        setHeight(\"160px\");\n        break;\n\n      default:\n        break;\n    }\n  }, [props.height]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.height === \"type1\" ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: height\n    },\n    className: props.errors && props.touched ? `${Styles.formInputBlockError}` : `${Styles.formInputBlock}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: props.name,\n    type: props.inputTextType && props.inputTextType === \"password\" ? \"password\" : \"text\",\n    className: props.ltrDir ? `${Styles.formInputText} ${Styles.formInputTextLtrDir}` : `${Styles.formInputText}`,\n    placeholder: props.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: props.name,\n    component: \"div\",\n    className: `${Styles.formErrorBlock}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })) : props.height === \"type2\" || props.height === \"type3\" ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: height\n    },\n    className: `${Styles.formInputBlock}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: props.name,\n    as: \"textarea\",\n    className: `${Styles.formInputTextArea}`,\n    placeholder: props.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })) : undefined);\n};\n\nexport default FromTextInput;","map":{"version":3,"sources":["/home/ali/reactjs-startup-accompaniment/src/components/common/Form/FormTextInput/FormTextInput.tsx"],"names":["React","useState","useEffect","Field","ErrorMessage","Styles","FromTextInput","props","height","setHeight","errors","touched","formInputBlockError","formInputBlock","name","inputTextType","ltrDir","formInputText","formInputTextLtrDir","placeholder","formErrorBlock","formInputTextArea","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;AAYA,MAAMC,aAAmC,GAAIC,KAAD,IAAW;AACrD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAS,MAAT,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQK,KAAK,CAACC,MAAd;AACE,WAAK,OAAL;AACEC,QAAAA,SAAS,CAAC,MAAD,CAAT;AACA;;AACF,WAAK,OAAL;AACEA,QAAAA,SAAS,CAAC,MAAD,CAAT;AACA;;AACF,WAAK,OAAL;AACEA,QAAAA,SAAS,CAAC,OAAD,CAAT;AACA;;AACF;AACE;AAXJ;AAaD,GAdQ,EAcN,CAACF,KAAK,CAACC,MAAP,CAdM,CAAT;AAgBA,sBACE,0CACGD,KAAK,CAACC,MAAN,KAAiB,OAAjB,gBACC;AACE,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAAEA;AAAV,KADT;AAEE,IAAA,SAAS,EACPD,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACI,OAAtB,GACK,GAAEN,MAAM,CAACO,mBAAoB,EADlC,GAEK,GAAEP,MAAM,CAACQ,cAAe,EALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEN,KAAK,CAACO,IADd;AAEE,IAAA,IAAI,EACFP,KAAK,CAACQ,aAAN,IAAuBR,KAAK,CAACQ,aAAN,KAAwB,UAA/C,GACI,UADJ,GAEI,MALR;AAOE,IAAA,SAAS,EACPR,KAAK,CAACS,MAAN,GACK,GAAEX,MAAM,CAACY,aAAc,IAAGZ,MAAM,CAACa,mBAAoB,EAD1D,GAEK,GAAEb,MAAM,CAACY,aAAc,EAVhC;AAYE,IAAA,WAAW,EAAEV,KAAK,CAACY,WAZrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAsBE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEZ,KAAK,CAACO,IADd;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,SAAS,EAAG,GAAET,MAAM,CAACe,cAAe,EAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADD,GA6BGb,KAAK,CAACC,MAAN,KAAiB,OAAjB,IAA4BD,KAAK,CAACC,MAAN,KAAiB,OAA7C,gBACF;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAAEA;AAAV,KAAZ;AAAgC,IAAA,SAAS,EAAG,GAAEH,MAAM,CAACQ,cAAe,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEN,KAAK,CAACO,IADd;AAEE,IAAA,EAAE,EAAE,UAFN;AAGE,IAAA,SAAS,EAAG,GAAET,MAAM,CAACgB,iBAAkB,EAHzC;AAIE,IAAA,WAAW,EAAEd,KAAK,CAACY,WAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADE,GASAG,SAvCN,CADF;AA2CD,CA7DD;;AA+DA,eAAehB,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Field, ErrorMessage } from \"formik\"\n\nimport Styles from \"./FormTextInput.module.css\"\n\ntype properties = {\n  errors: any\n  touched: any\n  placeholder: string\n  height?: string\n  name: string\n  ltrDir?: boolean\n  inputTextType?: string\n}\n\nconst FromTextInput: React.FC<properties> = (props) => {\n  const [height, setHeight] = useState<string>(\"35px\")\n  useEffect(() => {\n    switch (props.height) {\n      case \"type1\":\n        setHeight(\"40px\")\n        break\n      case \"type2\":\n        setHeight(\"90px\")\n        break\n      case \"type3\":\n        setHeight(\"160px\")\n        break\n      default:\n        break\n    }\n  }, [props.height])\n\n  return (\n    <>\n      {props.height === \"type1\" ? (\n        <div\n          style={{ height: height }}\n          className={\n            props.errors && props.touched\n              ? `${Styles.formInputBlockError}`\n              : `${Styles.formInputBlock}`\n          }\n        >\n          <Field\n            name={props.name}\n            type={\n              props.inputTextType && props.inputTextType === \"password\"\n                ? \"password\"\n                : \"text\"\n            }\n            className={\n              props.ltrDir\n                ? `${Styles.formInputText} ${Styles.formInputTextLtrDir}`\n                : `${Styles.formInputText}`\n            }\n            placeholder={props.placeholder}\n          />\n          <ErrorMessage\n            name={props.name}\n            component=\"div\"\n            className={`${Styles.formErrorBlock}`}\n          />\n        </div>\n      ) : props.height === \"type2\" || props.height === \"type3\" ? (\n        <div style={{ height: height }} className={`${Styles.formInputBlock}`}>\n          <Field\n            name={props.name}\n            as={\"textarea\"}\n            className={`${Styles.formInputTextArea}`}\n            placeholder={props.placeholder}\n          />\n        </div>\n      ) : undefined}\n    </>\n  )\n}\n\nexport default FromTextInput\n"]},"metadata":{},"sourceType":"module"}