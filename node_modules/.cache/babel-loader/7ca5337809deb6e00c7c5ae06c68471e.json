{"ast":null,"code":"import { getAccessToken } from \"../../core/api/post-access-token.api\";\nexport const tokenReducer = (state, action) => {\n  switch (action.type) {\n    case \"login\":\n      return {\n        accessToken: action.payload.accessToken,\n        refereshToken: action.payload.refereshToken\n      };\n\n    case \"accessTokenExpired\":\n      return getAccessToken(state.refereshToken).then(token => {\n        if (token) {\n          return { ...state,\n            accessToken: token\n          };\n        } else {\n          return {\n            accessToken: null,\n            refereshToken: null\n          };\n        }\n      });\n\n    case \"exit\":\n      return {\n        accessToken: null,\n        refereshToken: null\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/ali/hamnavazi/my-app/src/reducers/token/token.reducer.ts"],"names":["getAccessToken","tokenReducer","state","action","type","accessToken","payload","refereshToken","then","token"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,sCAA7B;AAEA,OAAO,MAAMC,YAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO;AAACC,QAAAA,WAAW,EAACF,MAAM,CAACG,OAAP,CAAeD,WAA5B;AAAwCE,QAAAA,aAAa,EAACJ,MAAM,CAACG,OAAP,CAAeC;AAArE,OAAP;;AACF,SAAK,oBAAL;AACE,aAAOP,cAAc,CAACE,KAAK,CAACK,aAAP,CAAd,CAAoCC,IAApC,CAAyCC,KAAK,IAAI;AACvD,YAAIA,KAAJ,EAAW;AACT,iBAAO,EAAC,GAAGP,KAAJ;AAAWG,YAAAA,WAAW,EAACI;AAAvB,WAAP;AACD,SAFD,MAGK;AACH,iBAAO;AAACJ,YAAAA,WAAW,EAAC,IAAb;AAAkBE,YAAAA,aAAa,EAAC;AAAhC,WAAP;AACD;AACF,OAPM,CAAP;;AASF,SAAK,MAAL;AACE,aAAO;AAACF,QAAAA,WAAW,EAAC,IAAb;AAAkBE,QAAAA,aAAa,EAAC;AAAhC,OAAP;;AACF;AACE,aAAOL,KAAP;AAhBJ;AAkBD,CAnBM","sourcesContent":["import {getAccessToken} from \"../../core/api/post-access-token.api\"\n\nexport const tokenReducer: any = (state, action) => {\n  switch (action.type) {\n    case \"login\":\n      return {accessToken:action.payload.accessToken,refereshToken:action.payload.refereshToken} \n    case \"accessTokenExpired\":\n      return getAccessToken(state.refereshToken).then(token => {\n        if (token) {\n          return {...state, accessToken:token }\n        }\n        else {\n          return {accessToken:null,refereshToken:null}\n        }\n      })\n      \n    case \"exit\":\n      return {accessToken:null,refereshToken:null}\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}